openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/employees:
    get:
      tags:
      - employee-controller
      operationId: getAllEmployees
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      tags:
      - employee-controller
      operationId: saveEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
        required: true
      responses:
        "200":
          description: OK
  /api/test:
    get:
      tags:
      - test-controller
      operationId: testMethod
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/employees/{id}:
    get:
      tags:
      - employee-controller
      summary: Get an employee by ID
      operationId: getEmployeeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Employee not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
        "200":
          description: Found the employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Employee ID not supplied
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /api/employees/filter:
    get:
      tags:
      - employee-controller
      operationId: filterBooks
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
components:
  schemas:
    EmployeeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 30
          minLength: 2
          pattern: "[A-Z].*"
          type: string
        email:
          maxLength: 30
          minLength: 2
          type: string
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
